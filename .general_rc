# Custom cross-shell init file (works for bash and zsh)

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups
# ... and ignore same sucessive entries.
export HISTCONTROL=ignoreboth
export EDITOR="vim"
export VISUAL=$EDITOR
export POWERLINE_COMMAND=$HOME/repo/dotfiles/powerline/scripts/powerline
export POWERLINE_CONFIG_COMMAND=$HOME/repo/dotfiles/powerline/scripts/powerline-config

if [[ $(uname) == "Darwin" ]]; then
	export PATH=/Applications/Emacs.app/Contents/MacOS/bin:$PATH
fi

export PATH=$HOME/bin:$HOME/repo/clojurescript/bin:/usr/share/eclipse:/opt/maven/bin:/opt/android-sdk/platform-tools:$HOME/.cabal/bin:$HOME/bin/node/bin:$HOME/.gem/ruby/1.9.1/bin:$HOME/.rvm/bin:$HOME/node_modules/.bin:$PATH
export CLASSPATH=.:src/:bin/
export PYTHONDOCS=/usr/share/doc/python2/html/
export ACKRC=".ackrc" # Allow directory level .ackrc.
export CLOJURESCRIPT_HOME=$HOME/repo/clojurescript

if [ -f /usr/bin/python2 ]; then
	VIRTUALENVWRAPPER_PYTHON=/usr/bin/python2
else
	VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
fi

#Custom Var to enable composite manager
export NODENAME=$(hostname)

if [[ $NODENAME == "arcbase" ]]; then
	export PROMPT_COLOR=blue
elif [[ $NODENAME == "eeebase" ]]; then
	export PROMPT_COLOR=green
elif [[ $NODENAME == "alarmpi" ]]; then
	export PROMPT_COLOR=red
elif [[ $NODENAME == "zenbook" ]]; then
	export PROMPT_COLOR=green
elif [[ $NODENAME == "facio-eng-air-1" ]]; then
	export PROMPT_COLOR=cyan
elif [[ $NODENAME == "ua41f726d71fb51c1f61d" ]]; then
	export PROMPT_COLOR=magenta
fi

# Autossh fun
export MY_AUTOSSH_PORT=29011
export MY_AUTOSSH_PORT=$(expr $MY_AUTOSSH_PORT + $(pgrep -u $USER -x autossh | wc -l))

# Use rednose by default
export NOSE_REDNOSE=1

# Make virtualenv use distribute by default instead of setuptools
export VIRTUALENV_DISTRIBUTE=1

unset HISTSIZE HISTFILESIZE
export HISTSIZE=20001

#Set editing type to vi
set -o vi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"
# If this is an xterm set the title to user@host:dir

case "$TERM" in
	xterm*|rxvt*)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
		;;
	*)
		;;
esac

if [[ $TERM == "rxvt-unicode" ]]; then
	export TERM="rxvt-unicode-256color"
fi

if [[ $TERM == "xterm" ]]; then
	export TERM="xterm-256color"
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.general_aliases ]; then
    source ~/.general_aliases
fi

if [ -f ~/.general_rc_secret ]; then
    source ~/.general_rc_secret
fi

# enable color support of ls and also add handy aliases
if [[ $(uname) == "Darwin" ]]; then
	alias ls='ls -hG'
else
	eval "`dircolors -b`"
	alias ls='ls -h --color=auto'
fi

#alias dir='ls --color=auto --format=vertical'
#alias vdir='ls --color=auto --format=long'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# some more ls aliases
alias ll='ls -a -l -h'
alias la='ls -a'

[[ -s "$HOME/.nvm/nvm.sh" ]] && source "$HOME/.nvm/nvm.sh" # Load nvm into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
command -v rbenv >/dev/null 2>&1 && eval "$(rbenv init -)"
