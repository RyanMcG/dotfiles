#!/usr/bin/env python2

# Copyright (c) 2014 Ryan McGowan
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in
#    all copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#    DEALINGS IN THE SOFTWARE.

from sys import argv
from os import path, environ

default_dev_dir = "/sys/class/backlight/intel_backlight"


def get_dev_dir():
    return environ.get("FUCKING_AUTOBOTS_BACKLIGHT_DEVICE_DIR",
                       default_dev_dir)


def manipulate_brightness(open_args):
    def wrap(manipulate):
        def inner(*args):
            dir = get_dev_dir()
            with open(path.join(dir, "brightness"), open_args) as bfile:
                margs = [bfile] + list(args)
                return manipulate(*margs)
        return inner
    return wrap


@manipulate_brightness("w")
def set_brighntess(bfile, brightness):
    bfile.write(str(brightness))


@manipulate_brightness("r")
def get_brightness(bfile):
    return int(bfile.read().strip())


char_to_direction = {"+": lambda x: get_brightness() + x,
                     "-": lambda x: get_brightness() - x}

identity = lambda x: x


def main(args):
    arg_str = "".join(args[1:]).strip()
    if arg_str:
        first_char = arg_str[0]
        direct = char_to_direction.get(first_char, identity)
        value = int(arg_str) if direct == identity else int(arg_str[1:])
        new_value = direct(value)
        set_brighntess(new_value)
    else:
        new_value = get_brightness()
    print(new_value)


def _main():
    main(argv)

if __name__ == '__main__':
    _main()
